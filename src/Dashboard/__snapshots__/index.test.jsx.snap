exports[`<Dashboard /> renders without crashing 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="Dashboard">
    <h1>
         Your devices: 
    </h1>
    <ul>
        
    </ul>
</div>,
  "nodes": Array [
    <div
      className="Dashboard">
      <h1>
             Your devices: 
      </h1>
      <ul>
            
      </ul>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Dashboard
        route={
                Object {
                        "authService": Object {
                          "getToken": [Function],
                        },
                        "devicesService": Object {
                          "fetch": [Function],
                        },
                      }
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Dashboard {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "route": Object {
            "authService": Object {
              "getToken": [Function],
            },
            "devicesService": Object {
              "fetch": [Function],
            },
          },
        },
        "refs": Object {},
        "state": Object {
          "devices": Array [],
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="Dashboard">
          <h1>
                     Your devices: 
          </h1>
          <ul>
                    
          </ul>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="Dashboard">
          <h1>
                     Your devices: 
          </h1>
          <ul>
                    
          </ul>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Dashboard
    route={
        Object {
            "authService": Object {
              "getToken": [Function],
            },
            "devicesService": Object {
              "fetch": [Function],
            },
          }
    } />,
}
`;
