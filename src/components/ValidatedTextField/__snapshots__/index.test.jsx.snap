exports[`<ValidatedTextField /> renders without crashing 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <TextField
    className="validated-text-field"
    disabled={false}
    errorText=""
    floatingLabelFixed={false}
    floatingLabelText="login"
    fullWidth={true}
    multiLine={false}
    onChange={[Function]}
    rows={1}
    type="text"
    underlineShow={true}
    value="" />,
  "nodes": Array [
    <TextField
      className="validated-text-field"
      disabled={false}
      errorText=""
      floatingLabelFixed={false}
      floatingLabelText="login"
      fullWidth={true}
      multiLine={false}
      onChange={[Function]}
      rows={1}
      type="text"
      underlineShow={true}
      value="" />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ValidatedTextField
        label="login" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ValidatedTextField {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleChange": [Function],
        "props": Object {
          "label": "login",
        },
        "refs": Object {},
        "state": Object {
          "fieldValue": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <TextField
          className="validated-text-field"
          disabled={false}
          errorText=""
          floatingLabelFixed={false}
          floatingLabelText="login"
          fullWidth={true}
          multiLine={false}
          onChange={[Function]}
          rows={1}
          type="text"
          underlineShow={true}
          value="" />,
        "_debugID": 2,
        "_renderedOutput": <TextField
          className="validated-text-field"
          disabled={false}
          errorText=""
          floatingLabelFixed={false}
          floatingLabelText="login"
          fullWidth={true}
          multiLine={false}
          onChange={[Function]}
          rows={1}
          type="text"
          underlineShow={true}
          value="" />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ValidatedTextField
    label="login" />,
}
`;

exports[`<ValidatedTextField /> should not display error when showValidationError is false 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <TextField
    className="validated-text-field"
    disabled={false}
    errorText=""
    floatingLabelFixed={false}
    floatingLabelText="login"
    fullWidth={true}
    multiLine={false}
    onChange={[Function]}
    rows={1}
    type="text"
    underlineShow={true}
    value="" />,
  "nodes": Array [
    <TextField
      className="validated-text-field"
      disabled={false}
      errorText=""
      floatingLabelFixed={false}
      floatingLabelText="login"
      fullWidth={true}
      multiLine={false}
      onChange={[Function]}
      rows={1}
      type="text"
      underlineShow={true}
      value="" />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ValidatedTextField
        errorText="Field required"
        handleChange={[Function]}
        label="login"
        showValidationError={false}
        type="text" />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ValidatedTextField {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleChange": [Function],
        "props": Object {
          "errorText": "Field required",
          "handleChange": [Function],
          "label": "login",
          "showValidationError": false,
          "type": "text",
        },
        "refs": Object {},
        "state": Object {
          "fieldValue": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <TextField
          className="validated-text-field"
          disabled={false}
          errorText=""
          floatingLabelFixed={false}
          floatingLabelText="login"
          fullWidth={true}
          multiLine={false}
          onChange={[Function]}
          rows={1}
          type="text"
          underlineShow={true}
          value="" />,
        "_debugID": 4,
        "_renderedOutput": <TextField
          className="validated-text-field"
          disabled={false}
          errorText=""
          floatingLabelFixed={false}
          floatingLabelText="login"
          fullWidth={true}
          multiLine={false}
          onChange={[Function]}
          rows={1}
          type="text"
          underlineShow={true}
          value="" />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ValidatedTextField
    errorText="Field required"
    handleChange={[Function]}
    label="login"
    showValidationError={false}
    type="text" />,
}
`;
